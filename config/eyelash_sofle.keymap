#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };
    //--------USキーボードの記号を日本語OSで表示通りに入力するための処理-----------------------------
    //`~マーク
    jis_GRAVE: jis_GRAVE {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_GRAVE";
        #binding-cells = <0>;
        bindings = <&kp LS(LBKT)>, <&kp EQUAL>; //通常時でもレフトシフトするようにしてある。
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;  //shiftを押しっぱなしにするための記述
    };


    //@マーク
    jis_N2: jis_N2 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N2";
        #binding-cells = <0>;
        bindings = <&kp N2>, <&kp LBKT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        //keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    //^マーク
    jis_N6: jis_N6 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N6";
        #binding-cells = <0>;
        bindings = <&kp N6>, <&kp EQUAL>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        //keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    //&マーク
    };
    jis_N7: jis_N7 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N7";
        #binding-cells = <0>;
        bindings = <&kp N7>, <&kp N6>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    //アスタリスクマーク
    jis_N8: jis_N8 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N8";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&kp SQT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // (マーク
    jis_N9: jis_N9 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N9";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&kp N8>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // )マーク
    jis_N0: jis_N0 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N0";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp N9>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    //アンダーバー
    jis_MINUS: jis_MINUS {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_MINUS";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp INT1>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    //イコールとプラス
    jis_EQUAL: jis_EQUAL {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_EQUAL";
        #binding-cells = <0>;
        bindings = <&kp LS(MINUS)>, <&kp SEMI>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // [マーク
    jis_LBKT: jis_LBKT {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_LBKT";
        #binding-cells = <0>;
        bindings = <&kp RBKT>, <&kp RBKT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // ]マーク
    jis_RBKT: jis_RBKT {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_RBKT";
        #binding-cells = <0>;
        bindings = <&kp BSLH>, <&kp BSLH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // yenマーク
    jis_BSLH: jis_BSLH {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_BSLH";
        #binding-cells = <0>;
        bindings = <&kp INT3>, <&kp INT3>; //INT3ではないかも
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    //コロンセミコロン
    jis_SEMI: jis_SEMI {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_SEMI";
        #binding-cells = <0>;
        bindings = <&kp SEMI>, <&kp SQT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        //keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    //クオーテーション
    jis_SQT: jis_SQT {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_SQT";
        #binding-cells = <0>;
        bindings = <&kp LS(N7)>, <&kp N2>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &jis_N2       &kp N3        &kp N4    &kp N5  &kp UP_ARROW     &jis_N6        &jis_N7    &jis_N8    &jis_N9          &jis_N0     &jis_GRAVE
&kp TAB     &kp Q      &kp W         &kp E         &kp R     &kp T   &kp DOWN_ARROW   &kp Y          &kp U      &kp I      &kp O            &kp P       &jis_LBKT
&kp CAPS    &kp A      &kp S         &kp D         &kp F     &kp G   &kp LEFT_ARROW   &kp H          &kp J      &kp K      &kp L            &jis_SEMI   &jis_RBKT
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V     &kp B   &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA  &kp DOT          &kp FSLH    &jis_SQT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE &mo 1   &kp ENTER        &kp BACKSPACE  &kp ENTER  &kp DELETE &jis_MINUS       &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp HOME         &kp PG_DN        &kp PG_UP   &kp END    &jis_MINUS        &jis_EQUAL
&trans      &rgb_ug RGB_HUI  &rgb_ug RGB_HUD &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &mkp MB5           &mmv MOVE_LEFT   &kp LEFT         &kp DOWN         &kp UP      &kp RIGHT  &jis_BSLH         &kp DQT
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
